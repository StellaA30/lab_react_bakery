{"ast":null,"code":"var _jsxFileName = \"/Users/stellaannor/bnta_work/week_09/day_3/task_BNTA_bakery/start_code/src/cake/CakeForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CakeForm = _ref => {\n  _s();\n  let {\n    listOfCakes,\n    setListOfCakes\n  } = _ref;\n  const [cakeName, setCakeName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [rating, setRating] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    console.log(\"Form submitted\");\n    const updatedcakes = [...listOfCakes];\n    const newCake = {\n      cakeName: cakeName,\n      ingredients: ingredients,\n      price: price,\n      rating: rating\n    };\n\n    // condition to check cake already exist \n    const isCakeAlreadyAdded = updatedcakes.some(cake => cake.cakeName === newCake.cakeName);\n    // if case exists then let the user know it does exist\n    if (isCakeAlreadyAdded) {\n      setMessage(\"Cake already exists on the list.\");\n    }\n    // if not then add the cake to the page\n    else {\n      updatedcakes.push(newCake); // Add new cake\n      setListOfCakes(updatedcakes); // Set the updated array of cakes\n      setMessage(\"Cake added successfully!\");\n    }\n\n    //   updatedcakes.push(newCake); //add new cake\n\n    //   setListOfCakes(updatedcakes);  // set the updated array of cakes\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Complete form to add a new cake!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cakeName\",\n        placeholder: \"cake name\",\n        value: cakeName,\n        onChange: e => setCakeName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ingredients\",\n        placeholder: \"ingredients\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value.split(\",\"))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        placeholder: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"rating\",\n        placeholder: \"cake rating\",\n        value: rating,\n        onChange: e => setRating(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CakeForm, \"5gE3znVVpQ7SyCw46droCFPQmXc=\");\n_c = CakeForm;\nexport default CakeForm;\nvar _c;\n$RefreshReg$(_c, \"CakeForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CakeForm","_ref","_s","listOfCakes","setListOfCakes","cakeName","setCakeName","ingredients","setIngredients","price","setPrice","rating","setRating","message","setMessage","handleFormSubmit","e","preventDefault","console","log","updatedcakes","newCake","isCakeAlreadyAdded","some","cake","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","split","_c","$RefreshReg$"],"sources":["/Users/stellaannor/bnta_work/week_09/day_3/task_BNTA_bakery/start_code/src/cake/CakeForm.js"],"sourcesContent":["import { useState } from \"react\";\n\n\nconst CakeForm = ({listOfCakes, setListOfCakes}) => {\n\n    const [cakeName, setCakeName] = useState(\"\");\n    const [ingredients, setIngredients] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [rating, setRating] = useState(0);\n    const [message, setMessage] = useState(\"\");\n\n    \n    \n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Form submitted\");\n\n        const updatedcakes = [...listOfCakes]; \n\n        const newCake = {\n            cakeName: cakeName,\n            ingredients:ingredients,\n            price: price,\n            rating: rating\n      };\n\n      // condition to check cake already exist \n        const isCakeAlreadyAdded = updatedcakes.some(\n        (cake) => cake.cakeName === newCake.cakeName\n      );\n    // if case exists then let the user know it does exist\n      if (isCakeAlreadyAdded) {\n        setMessage(\"Cake already exists on the list.\");\n      } \n      // if not then add the cake to the page\n      else {\n        updatedcakes.push(newCake); // Add new cake\n        setListOfCakes(updatedcakes); // Set the updated array of cakes\n        setMessage(\"Cake added successfully!\");\n      }\n\n\n    //   updatedcakes.push(newCake); //add new cake\n\n    //   setListOfCakes(updatedcakes);  // set the updated array of cakes\n  \n    }\n    \n    \n        \n    return (  \n        <>\n        <h3>Complete form to add a new cake!!</h3>\n        <form onSubmit={handleFormSubmit}>\n            <input \n            type=\"text\"\n            name=\"cakeName\"\n            placeholder=\"cake name\"\n            value={cakeName}\n            onChange={(e) => setCakeName(e.target.value)}\n\n            />\n\n            <input \n            type=\"text\"\n            name=\"ingredients\"\n            placeholder=\"ingredients\"\n            value={ingredients}\n            onChange={(e) => setIngredients(e.target.value.split(\",\"))}\n            />\n\n            <input \n            type=\"text\"\n            name=\"price\"\n            placeholder=\"price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            />\n\n            <input \n            type=\"text\"\n            name=\"rating\"\n            placeholder=\"cake rating\"\n            value={rating}\n            onChange={(e) => setRating(e.target.value)}\n            />\n            <input \n            type=\"submit\"\n            value=\"Submit\"/>\n        </form>\n        <p>{message}</p>\n        </>\n\n    );\n}\n \nexport default CakeForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,MAAMC,QAAQ,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAACC,WAAW;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAE3C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAI1C,MAAMoB,gBAAgB,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAE7B,MAAMC,YAAY,GAAG,CAAC,GAAGjB,WAAW,CAAC;IAErC,MAAMkB,OAAO,GAAG;MACZhB,QAAQ,EAAEA,QAAQ;MAClBE,WAAW,EAACA,WAAW;MACvBE,KAAK,EAAEA,KAAK;MACZE,MAAM,EAAEA;IACd,CAAC;;IAED;IACE,MAAMW,kBAAkB,GAAGF,YAAY,CAACG,IAAI,CAC3CC,IAAI,IAAKA,IAAI,CAACnB,QAAQ,KAAKgB,OAAO,CAAChB,QACtC,CAAC;IACH;IACE,IAAIiB,kBAAkB,EAAE;MACtBR,UAAU,CAAC,kCAAkC,CAAC;IAChD;IACA;IAAA,KACK;MACHM,YAAY,CAACK,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC;MAC5BjB,cAAc,CAACgB,YAAY,CAAC,CAAC,CAAC;MAC9BN,UAAU,CAAC,0BAA0B,CAAC;IACxC;;IAGF;;IAEA;EAEA,CAAC;;EAID,oBACIjB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACA7B,OAAA;MAAA6B,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CjC,OAAA;MAAMkC,QAAQ,EAAEhB,gBAAiB;MAAAW,QAAA,gBAC7B7B,OAAA;QACAmC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAE9B,QAAS;QAChB+B,QAAQ,EAAGpB,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5C,CAAC,eAEFjC,OAAA;QACAmC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,aAAa;QAClBC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAE5B,WAAY;QACnB6B,QAAQ,EAAGpB,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAACqB,MAAM,CAACF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eAEFjC,OAAA;QACAmC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGpB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eAEFjC,OAAA;QACAmC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAExB,MAAO;QACdyB,QAAQ,EAAGpB,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFjC,OAAA;QACAmC,IAAI,EAAC,QAAQ;QACbG,KAAK,EAAC;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACPjC,OAAA;MAAA6B,QAAA,EAAIb;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACd,CAAC;AAGX,CAAC;AAAA5B,EAAA,CA3FKF,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AA6Fd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}